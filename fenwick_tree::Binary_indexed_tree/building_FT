// simple fenwick tree code to find the sum between the range

#include <bits/stdc++.h>
using namespace std;

void update(int index, int value, int* BIT, int n)
{
	for(;index <= n; index += index & (-index))
	{
		BIT[index] += value;
	}
}

int query(int index, int* BIT)
{
	int ans = 0;
	for(;index > 0; i -= index & (-index))
	{
		ans += BIT[index];
	}
	return sum;
}

int main()
{
	/* code */
	int n;
	cin>>n;

	int* arr = new int[n+1]();
	int* BIT = new int[n+1]();

	for(int i=1; i<n; i++)
	{
		cin>>arr[i];
		update(i, arr[i], BIT, n);
	}
	cout<<"sum of 0 to 5"<<query(5, BIT)<<endl;
	cout<<"sum of 2 to 7"<<query(7, BIT)-query(1, BIT)<<endl;


	return 0;
}
